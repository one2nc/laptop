#!/bin/sh

# Welcome to the mac script!
# Be prepared to turn your Mac
# into an awesome development machine.


fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\\n" "$text" >> "$zshrc"
    else
      printf "\\n%s\\n" "$text" >> "$zshrc"
    fi
  fi
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

# shellcheck disable=SC2016
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

# Determine Homebrew prefix
arch="$(uname -m)"
if [ "$arch" = "arm64" ]; then
  HOMEBREW_PREFIX="/opt/homebrew"
else
  HOMEBREW_PREFIX="/usr/local"
fi

update_shell() {
  local shell_path;
  shell_path="$(command -v zsh)"

  fancy_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

case "$SHELL" in
  */zsh)
    if [ "$(command -v zsh)" != '/usr/local/bin/zsh' ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    /bin/bash -c \
     "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    append_to_zshrc "eval \"\$($HOMEBREW_PREFIX/bin/brew shellenv)\""

    export PATH="$HOMEBREW_PREFIX/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151

# show only open app icons in dock
defaults write com.apple.dock static-only -bool true; killall Dock

# Unix
fancy_echo "Installing git"
brew install git

fancy_echo "Installing openssl"
brew install openssl

fancy_echo "Installing zsh"
brew install zsh

# GitHub
fancy_echo "Installing Github(gh)"
brew install gh

# IDE's

# Intellij CE
fancy_echo "Installing intellij"
brew install --cask intellij-idea-ce

# Visual Studio Code
fancy_echo "Installing visual-studio-code"
brew install --cask visual-studio-code

# Vim
fancy_echo "Installing vim"
brew install vim

# Sublime Text
fancy_echo "Installing sublime text"
brew install --cask sublime-text

# Docker Desktop
fancy_echo "Installing Docker-Desktop"
brew install --cask docker

# Numi Calculator
fancy_echo "Installing Numi Calculator"
brew install --cask numi

# Iterm
fancy_echo "Installing Iterm2"
brew install --cask iterm2

# Google Chrome
fancy_echo "Installing Google Chrome"
brew install --cask google-chrome

# Firefox
fancy_echo "Installing Firefox"
brew install --cask firefox

# Obsidian
fancy_echo "Installing Obsidian"
brew install --cask obsidian

# Slack
fancy_echo "Installing Slack"
brew install --cask slack

# Notion
fancy_echo "Installing Notion"
brew install --cask notion

# Zoom
fancy_echo "Installing Zoom"
brew install --cask zoom

# Macdown
fancy_echo "Installing macdown"
brew install --cask macdown

# Google Drive
fancy_echo "Installing google-drive"
brew install --cask google-drive

# lastpass 
fancy_echo "Installing lastpass"
brew install --cask lastpass

# Maccy
fancy_echo "Installing maccy"
brew install --cask maccy

# LibreOffice
fancy_echo "Installing libreoffice"
brew install --cask libreoffice

# Postman
fancy_echo "Installing postman"
brew install --cask postman

# Scroll Reverser
fancy_echo "Installing scroll-reverser"
brew install --cask scroll-reverser

# Rectangle
fancy_echo "Installing scroll-reverser"
brew install --cask rectangle

# Table Plus
fancy_echo "Installing tableplus"
brew install --cask tableplus

# Spotify
fancy_echo "Installing spotify"
brew install --cask spotify

# WhatsApp
fancy_echo "Installing WhatsApp"
brew install --cask whatsapp

# Alfred
fancy_echo "Installing Alfred"
brew install --cask alfred

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi

# set default key repeat rate to some sane values
defaults write -g InitialKeyRepeat -int 25
defaults write -g KeyRepeat -int 2

# enable three-finger drag
defaults write com.apple.AppleMultitouchTrackpad DragLock -bool false
defaults write com.apple.AppleMultitouchTrackpad Dragging -bool false
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool true

# find out id of current user
user=`id -un`

# force user to logout for the key repeat rate and three-finger drag to take effect
launchctl bootout user/`id -u $user`
